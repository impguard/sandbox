#!/usr/bin/env bash

SOURCE=challenge.hs


bake_task init "Initialize the project"
function init ()
{
    docker pull haskell:8.2.1
}

function hrun ()
{
    exec docker run -it --rm \
        --workdir /workspace \
        --volume "$(pwd)":/workspace \
        haskell:8.2.1 "$@"
}

bake_task repl "Start a haskell repl"
function repl ()
{
    hrun ghci
}

bake_task shell "Start the environment as a shell"
function shell ()
{
    hrun /bin/bash
}

bake_task compile "Compiles the provided haskell source file"
function compile ()
{
    local filename output
    filename="$(basename "$SOURCE")"
    output="${filename%.*}.out"
    hrun ghc --make -o "$output" "$filename"
}

bake_task run "Runs the compiled haskell source file"
function run ()
{
    local filename output
    filename="$(basename "$SOURCE")"
    output="${filename%.*}.out"

    if [ ! -f "$output" ]; then
        bake_echo_red 'Please compile first:'
        bake_echo_yellow "  bake compile $SOURCE"
        return 1
    fi

    hrun ./"$output" "$@"
}

bake_task clean "Cleans up generated files"
function clean ()
{
    rm ./*.hi ./*.o ./*.out
}
